{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vn100\\\\Desktop\\\\CoolBeans\\\\CS-161\\\\Ecommerce\\\\client\\\\src\\\\pages\\\\admin\\\\category\\\\CategoryUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AdminNav from '../../../components/navigation/AdminNav'; //import UserNav from \"../../components/navigation/UserNav\";\n\nimport { toast } from 'react-toastify';\nimport { useSelector } from \"react-redux\";\nimport { updateCategory, getCategory } from \"../../../functions/category\";\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryUpdate = ({\n  history,\n  match\n}) => {\n  _s();\n\n  /// spread state object and get the user out of that\n  // object destruction\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    loadCategory().then().catch();\n  }, []);\n\n  const loadCategory = () => getCategory(match.params.slug).then(category => setName(category.data.name));\n\n  const handleSubmit = e => {\n    e.preventDefault(); //console.log(name);\n\n    setLoading(true);\n    updateCategory(match.params.slug, {\n      name\n    }, user.token).then(res => {\n      // console.log(res)\n      setLoading(false);\n      setName('');\n      toast.success(`${res.data.name} is updated`);\n      history.push('/admin/category');\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      if (err.response.status === 400) toast.error(err.response.data);\n    });\n  };\n  /*const handleRemove = async(slug) => {\r\n      /!*let ans = window.confirm(\"Delete?\");\r\n      console.log(ans, slug);*!/\r\n      if(window.confirm(\"Delete?\")){\r\n          setLoading(true)\r\n          removeCategory(slug, user.token)\r\n              .then(res => {\r\n                  setLoading(false);\r\n                  toast.error(`${res.data.name} deleted`);\r\n                  loadCategories().then().catch();\r\n              })\r\n              .catch(err => {\r\n                  if(err.response.status === 400){\r\n                      setLoading(false);\r\n                      toast.error(err.response.data);\r\n                    }\r\n              })\r\n      }\r\n  }*/\n\n  /*const categoryForm = () =>\r\n      <form onSubmit ={handleSubmit}>\r\n          <div className=\"form-group\">\r\n              <label >Name</label>\r\n              <input type=\"text\" className=\"form-control\"\r\n                     onChange={e => setName(e.target.value)}\r\n                     value = {name}\r\n                     autoFocus\r\n                     required\r\n              />\r\n              <br/>\r\n              <button className=\"btn btn-outline-primary\">Save</button>\r\n          </div>\r\n      </form>*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-danger\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Update Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CategoryForm, {\n          handleSubmit: handleSubmit,\n          name: name,\n          setName: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryUpdate, \"IUXEu1Pnfkdde74DxDKaOM75teU=\", false, function () {\n  return [useSelector];\n});\n\n_c = CategoryUpdate;\nexport default CategoryUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryUpdate\");","map":{"version":3,"sources":["C:/Users/vn100/Desktop/CoolBeans/CS-161/Ecommerce/client/src/pages/admin/category/CategoryUpdate.js"],"names":["React","useState","useEffect","AdminNav","toast","useSelector","updateCategory","getCategory","CategoryForm","CategoryUpdate","history","match","user","state","name","setName","loading","setLoading","loadCategory","then","catch","params","slug","category","data","handleSubmit","e","preventDefault","token","res","success","push","err","console","log","response","status","error"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport AdminNav from '../../../components/navigation/AdminNav'\r\n//import UserNav from \"../../components/navigation/UserNav\";\r\nimport {toast} from 'react-toastify'\r\nimport {useSelector} from \"react-redux\";\r\nimport {updateCategory, getCategory} from \"../../../functions/category\";\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\n\r\n\r\n\r\nconst CategoryUpdate = ({history, match}) => {\r\n    /// spread state object and get the user out of that\r\n    // object destruction\r\n    const {user} = useSelector(state => ({...state}));\r\n    const [name, setName] = useState('')\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        loadCategory().then().catch();\r\n    }, []);\r\n\r\n    const loadCategory = () => getCategory(match.params.slug).then((category) =>\r\n        setName(category.data.name)\r\n    );\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(name);\r\n        setLoading(true)\r\n        updateCategory(match.params.slug, {name}, user.token)\r\n            .then(res => {\r\n                // console.log(res)\r\n                setLoading(false)\r\n                setName('')\r\n                toast.success(`${res.data.name} is updated`);\r\n                history.push('/admin/category');\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                if(err.response.status === 400) toast.error(err.response.data);\r\n            })\r\n    };\r\n\r\n    /*const handleRemove = async(slug) => {\r\n        /!*let ans = window.confirm(\"Delete?\");\r\n        console.log(ans, slug);*!/\r\n        if(window.confirm(\"Delete?\")){\r\n            setLoading(true)\r\n            removeCategory(slug, user.token)\r\n                .then(res => {\r\n                    setLoading(false);\r\n                    toast.error(`${res.data.name} deleted`);\r\n                    loadCategories().then().catch();\r\n                })\r\n                .catch(err => {\r\n                    if(err.response.status === 400){\r\n                        setLoading(false);\r\n                        toast.error(err.response.data);\r\n\r\n                    }\r\n                })\r\n        }\r\n    }*/\r\n    /*const categoryForm = () =>\r\n        <form onSubmit ={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label >Name</label>\r\n                <input type=\"text\" className=\"form-control\"\r\n                       onChange={e => setName(e.target.value)}\r\n                       value = {name}\r\n                       autoFocus\r\n                       required\r\n                />\r\n                <br/>\r\n                <button className=\"btn btn-outline-primary\">Save</button>\r\n            </div>\r\n        </form>*/\r\n\r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    { loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                        <h4>Update Category</h4>\r\n                    )}\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n                    <hr/>\r\n\r\n                    {/*JSON.stringify(categories*/}\r\n                    {/*{categories.length}*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryUpdate;"]},"metadata":{},"sourceType":"module"}