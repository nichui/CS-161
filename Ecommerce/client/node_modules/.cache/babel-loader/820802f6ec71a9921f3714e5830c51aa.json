{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vn100\\\\Desktop\\\\Ecommerce\\\\client\\\\src\\\\pages\\\\user\\\\Password.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport UserNav from '../../components/navigation/UserNav';\nimport { auth } from '../../firebase';\nimport { toast } from 'react-toastify';\nimport { load } from \"dotenv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Password = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // make sure page doesn't reload.\n\n    setLoading(true); //console.log(password);\n\n    await auth.currentUser.updatePassword(password).then(() => {\n      setLoading(false);\n      toast.success('Password updated');\n    }).catch(err => {\n      setLoading(false);\n      toast.error(err.message);\n    });\n  };\n\n  const passwordUpdateForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        className: \"form-control\",\n        placeholder: \"Enter new password\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: !password || loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(UserNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-danger\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Password Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 78\n        }, this), passwordUpdateForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Password, \"dY6bUIrTjkzgRRdD5IcqE8IYBWs=\");\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/Users/vn100/Desktop/Ecommerce/client/src/pages/user/Password.js"],"names":["React","useState","UserNav","auth","toast","load","Password","password","setPassword","loading","setLoading","handleSubmit","e","preventDefault","currentUser","updatePassword","then","success","catch","err","error","message","passwordUpdateForm","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,SAAQC,IAAR,QAAmB,gBAAnB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,IAAR,QAAmB,QAAnB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAK,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAArC;;AAEA,QAAMU,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF,GAD8B,CACV;;AACpBH,IAAAA,UAAU,CAAC,IAAD,CAAV,CAF8B,CAG9B;;AAEA,UAAMP,IAAI,CAACW,WAAL,CACDC,cADC,CACcR,QADd,EAEDS,IAFC,CAEI,MAAM;AACRN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,KAAK,CAACa,OAAN,CAAc,kBAAd;AACH,KALC,EAMDC,KANC,CAMKC,GAAG,IAAI;AACVT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,KAAK,CAACgB,KAAN,CAAYD,GAAG,CAACE,OAAhB;AACH,KATC,CAAN;AAUH,GAfD;;AAiBA,QAAMC,kBAAkB,GAAG,mBACvB;AAAM,IAAA,QAAQ,EAAEX,YAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AACO,QAAA,QAAQ,EAAEC,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CADjC;AAEO,QAAA,SAAS,EAAC,cAFjB;AAGO,QAAA,WAAW,EAAC,oBAHnB;AAIO,QAAA,QAAQ,EAAEf;AAJjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,QAAQ,EAAE,CAACF,QAAD,IAAaE,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACKA,OAAO,gBAAI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,gBAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD7D,EAGKa,kBAAkB,EAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnDD;;GAAMhB,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport UserNav from '../../components/navigation/UserNav';\r\nimport {auth} from '../../firebase';\r\nimport {toast} from 'react-toastify';\r\nimport {load} from \"dotenv\";\r\n\r\n\r\nconst Password = () => {\r\n    const[password, setPassword] = useState(\"\");\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // make sure page doesn't reload.\r\n        setLoading(true)\r\n        //console.log(password);\r\n\r\n        await auth.currentUser\r\n            .updatePassword(password)\r\n            .then(() => {\r\n                setLoading(false);\r\n                toast.success('Password updated');\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                toast.error(err.message);\r\n            });\r\n    };\r\n\r\n    const passwordUpdateForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"\">Your Password</label>\r\n                <input type=\"password\"\r\n                       onChange={e => setPassword(e.target.value)}\r\n                       className=\"form-control\"\r\n                       placeholder=\"Enter new password\"\r\n                       disabled={loading}\r\n                />\r\n                <button className=\"btn btn-primary\" disabled={!password || loading}>\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <UserNav/>\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (<h4 className=\"text-danger\">Loading</h4>) : (<h4>Password Update</h4>)}\r\n\r\n                    {passwordUpdateForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Password;"]},"metadata":{},"sourceType":"module"}