{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vn100\\\\Desktop\\\\Ecommerce\\\\client\\\\src\\\\pages\\\\authentication\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { auth } from \"../../firebase\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useSelector } from \"react-redux\"; // use useSelector instead of useDispatch since we don't\n// want user to enter forgot password page when they are logged in.\n// redirect them away\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n      handleCodeInApp: true\n    };\n    await auth.sendPasswordResetEmail(email, config).then(() => {\n      setEmail('');\n      setLoading(false);\n      toast.success('Check your email for password reset link');\n    }).catch(error => {\n      setLoading(false);\n      toast.error(error.message);\n      console.log('ERROR MSG IN FORGOT PASSWORD', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-danger\",\n      children: \" Loading \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Type your email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-raised\",\n        type: \"danger\",\n        disabled: !email,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ForgotPassword, \"HXCd6C9Neg4Q1PGUj+/gfYgo7XM=\");\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/vn100/Desktop/Ecommerce/client/src/pages/authentication/ForgotPassword.js"],"names":["React","useState","useEffect","auth","toast","ToastContainer","useSelector","ForgotPassword","history","email","setEmail","loading","setLoading","handleSubmit","e","preventDefault","config","url","process","env","REACT_APP_FORGOT_PASSWORD_REDIRECT","handleCodeInApp","sendPasswordResetEmail","then","success","catch","error","message","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAAQC,KAAR,EAAeC,cAAf,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAA0C;AAC1C;AACA;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAK,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAArC;;AAEA,QAAMY,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,kCADN;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAf;AAIA,UAAMlB,IAAI,CAACmB,sBAAL,CAA4Bb,KAA5B,EAAmCO,MAAnC,EACDO,IADC,CACI,MAAM;AACRb,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAR,MAAAA,KAAK,CAACoB,OAAN,CAAc,0CAAd;AACP,KALK,EAMDC,KANC,CAMMC,KAAD,IAAU;AACbd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAR,MAAAA,KAAK,CAACsB,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,KAA5C;AACH,KAVC,CAAN;AAYH,GApBD;;AAsBA,sBAAQ;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,eACCf,OAAO,gBAAG;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADxD,eAEA;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAEJ,KAHX;AAII,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV,CAJ7B;AAKI,QAAA,WAAW,EAAE,iBALjB;AAMI,QAAA,SAAS;AANb;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAiD,QAAA,QAAQ,EAAE,CAACtB,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAkBH,CA5CD;;GAAMF,c;;KAAAA,c;AA8CN,eAAeA,cAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { auth } from \"../../firebase\";\r\nimport {toast, ToastContainer} from 'react-toastify'\r\nimport { useSelector } from \"react-redux\" // use useSelector instead of useDispatch since we don't\r\n// want user to enter forgot password page when they are logged in.\r\n// redirect them away\r\n\r\nconst ForgotPassword = ({history}) =>{\r\n    const [email, setEmail] = useState('')\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n            handleCodeInApp: true,\r\n        }\r\n        await auth.sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                setLoading(false)\r\n                toast.success('Check your email for password reset link');\r\n        })\r\n            .catch((error) =>{\r\n                setLoading(false)\r\n                toast.error(error.message);\r\n                console.log('ERROR MSG IN FORGOT PASSWORD', error);\r\n            })\r\n\r\n    };\r\n\r\n    return (<div className=\"container col-md-6 offset-md-3 p-5\">\r\n            {loading ? <h4 className=\"text-danger\"> Loading </h4> : <h4>Forgot Password</h4>}\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder= \"Type your email\"\r\n                    autoFocus\r\n                />\r\n                <br/>\r\n                <button className=\"btn btn-raised\" type=\"danger\" disabled={!email}>\r\n                    Submit\r\n                </button> {/*if user didn't enter email then button will be disabled*/}\r\n            </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}