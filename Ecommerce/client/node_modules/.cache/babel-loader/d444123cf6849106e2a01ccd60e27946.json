{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vn100\\\\Desktop\\\\Ecommerce\\\\client\\\\src\\\\pages\\\\admin\\\\category\\\\CategoryCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AdminNav from '../../../components/navigation/AdminNav'; //import UserNav from \"../../components/navigation/UserNav\";\n\nimport { toast } from 'react-toastify';\nimport { useSelector } from \"react-redux\";\nimport { createCategory, getCategories, removeCategory } from \"../../../functions/category\";\nimport { Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryCreate = () => {\n  _s();\n\n  /// spread state object and get the user out of that\n  // object destruction\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [categories, setCategories] = useState([]); //searching/filtering\n  //step 1\n\n  const [keyword, setKeyword] = useState(\"\"); //whenever user types something, it will be stored in state\n\n  useEffect(() => {\n    loadCategories().then().catch();\n  }, []);\n\n  const loadCategories = () => getCategories().then(c => setCategories(c.data));\n\n  const handleSubmit = e => {\n    e.preventDefault(); //console.log(name);\n\n    setLoading(true);\n    createCategory({\n      name\n    }, user.token).then(res => {\n      // console.log(res)\n      setLoading(false);\n      setName('');\n      toast.success(`${res.data.name} is created`);\n      loadCategories().then().catch();\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      if (err.response.status === 400) toast.error(err.response.data);\n    });\n  };\n\n  const handleRemove = async slug => {\n    /*let ans = window.confirm(\"Delete?\");\r\n    console.log(ans, slug);*/\n    if (window.confirm(\"Delete?\")) {\n      setLoading(true);\n      removeCategory(slug, user.token).then(res => {\n        setLoading(false);\n        toast.error(`${res.data.name} deleted`);\n        loadCategories().then().catch();\n      }).catch(err => {\n        if (err.response.status === 400) {\n          setLoading(false);\n          toast.error(err.response.data);\n        }\n      });\n    }\n  };\n  /*const categoryForm = () =>\r\n      <form onSubmit ={handleSubmit}>\r\n          <div className=\"form-group\">\r\n              <label >Name</label>\r\n              <input type=\"text\" className=\"form-control\"\r\n                     onChange={e => setName(e.target.value)}\r\n                     value = {name}\r\n                     autoFocus\r\n                     required\r\n              />\r\n              <br/>\r\n              <button className=\"btn btn-outline-primary\">Save</button>\r\n          </div>\r\n      </form>*/\n  // step 3\n\n\n  const handleSearchChange = e => {\n    e.preventDefault();\n    setKeyword(e.target.value.toLowerCase());\n    1;\n  }; // step 4\n\n\n  const searched = keyword => category => category.name.toLowerCase().includes(keyword);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-danger\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Create Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CategoryForm, {\n          handleSubmit: handleSubmit,\n          name: name,\n          setName: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Filter\",\n          value: keyword,\n          onChange: handleSearchChange,\n          className: \"form-control mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), categories.searched(keyword).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: [category.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => handleRemove(category.slug),\n            className: \"btn btn-sm float-right\",\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n              className: \"test-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/category/${category.slug}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn btn-sm float-right\",\n              children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                className: \"text-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, category._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryCreate, \"GgT9syea0YXySc36adkNKox8+RI=\", false, function () {\n  return [useSelector];\n});\n\n_c = CategoryCreate;\nexport default CategoryCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryCreate\");","map":{"version":3,"sources":["C:/Users/vn100/Desktop/Ecommerce/client/src/pages/admin/category/CategoryCreate.js"],"names":["React","useState","useEffect","AdminNav","toast","useSelector","createCategory","getCategories","removeCategory","Link","EditOutlined","DeleteOutlined","CategoryForm","CategoryCreate","user","state","name","setName","loading","setLoading","categories","setCategories","keyword","setKeyword","loadCategories","then","catch","c","data","handleSubmit","e","preventDefault","token","res","success","err","console","log","response","status","error","handleRemove","slug","window","confirm","handleSearchChange","target","value","toLowerCase","searched","category","includes","map","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport AdminNav from '../../../components/navigation/AdminNav'\r\n//import UserNav from \"../../components/navigation/UserNav\";\r\nimport {toast} from 'react-toastify'\r\nimport {useSelector} from \"react-redux\";\r\nimport {createCategory, getCategories, removeCategory} from \"../../../functions/category\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {EditOutlined, DeleteOutlined} from '@ant-design/icons'\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\n\r\nconst CategoryCreate = () => {\r\n    /// spread state object and get the user out of that\r\n    // object destruction\r\n    const {user} = useSelector(state => ({...state}));\r\n    const [name, setName] = useState('')\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    //searching/filtering\r\n    //step 1\r\n    const[keyword, setKeyword] = useState(\"\"); //whenever user types something, it will be stored in state\r\n\r\n\r\n    useEffect(() => {\r\n        loadCategories().then().catch();\r\n    }, []);\r\n\r\n    const loadCategories = () => getCategories().then(c =>\r\n        setCategories(c.data)\r\n    );\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(name);\r\n        setLoading(true)\r\n        createCategory({name}, user.token)\r\n            .then(res => {\r\n                // console.log(res)\r\n                setLoading(false)\r\n                setName('')\r\n                toast.success(`${res.data.name} is created`);\r\n                loadCategories().then().catch();\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                if(err.response.status === 400) toast.error(err.response.data);\r\n            })\r\n    };\r\n\r\n    const handleRemove = async(slug) => {\r\n        /*let ans = window.confirm(\"Delete?\");\r\n        console.log(ans, slug);*/\r\n        if(window.confirm(\"Delete?\")){\r\n            setLoading(true)\r\n            removeCategory(slug, user.token)\r\n                .then(res => {\r\n                    setLoading(false);\r\n                    toast.error(`${res.data.name} deleted`);\r\n                    loadCategories().then().catch();\r\n                })\r\n                .catch(err => {\r\n                    if(err.response.status === 400){\r\n                        setLoading(false);\r\n                        toast.error(err.response.data);\r\n\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    /*const categoryForm = () =>\r\n        <form onSubmit ={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label >Name</label>\r\n                <input type=\"text\" className=\"form-control\"\r\n                       onChange={e => setName(e.target.value)}\r\n                       value = {name}\r\n                       autoFocus\r\n                       required\r\n                />\r\n                <br/>\r\n                <button className=\"btn btn-outline-primary\">Save</button>\r\n            </div>\r\n        </form>*/\r\n\r\n    // step 3\r\n    const handleSearchChange = (e) => {\r\n        e.preventDefault()\r\n        setKeyword(e.target.value.toLowerCase());1\r\n    }\r\n\r\n    // step 4\r\n    const searched = (keyword) => (category) => category.name.toLowerCase().includes(keyword)\r\n\r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    { loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                        <h4>Create Category</h4>\r\n                    )}\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n\r\n                    {/* Step 2*/}\r\n                    <input\r\n                        type=\"search\"\r\n                        placeholder=\"Filter\"\r\n                        value={keyword}\r\n                        onChange={handleSearchChange}\r\n                        className=\"form-control mb-4\"\r\n                    /> {/*user can type keywords here*/}\r\n\r\n                    <hr/>\r\n                    {/* step 5 */}\r\n                    {categories.searched(keyword).map((category) => (\r\n                        <div className=\"alert alert-warning\" key = {category._id}>\r\n                        {category.name}\r\n                        <span onClick={() => handleRemove(category.slug)} className=\"btn btn-sm float-right\">\r\n                            <DeleteOutlined className=\"test-danger\"/>\r\n                        </span>\r\n                            <Link to={`/admin/category/${category.slug}`}>\r\n\r\n                                <span className=\"btn btn-sm float-right\">\r\n                                    <EditOutlined className=\"text-warning\"/>\r\n                                </span>\r\n                            </Link>\r\n                    </div>))}\r\n                    {/*JSON.stringify(categories*/}\r\n                    {/*{categories.length}*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryCreate;"]},"metadata":{},"sourceType":"module"}