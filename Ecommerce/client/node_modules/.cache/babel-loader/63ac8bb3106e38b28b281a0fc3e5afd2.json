{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vn100\\\\Desktop\\\\Ecommerce\\\\client\\\\src\\\\pages\\\\admin\\\\sub\\\\SubUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AdminNav from '../../../components/navigation/AdminNav'; //import UserNav from \"../../components/navigation/UserNav\";\n\nimport { toast } from 'react-toastify';\nimport { useSelector } from \"react-redux\";\nimport { getCategories } from \"../../../functions/category\";\nimport { createSub, getSub, removeSub } from \"../../../functions/sub\";\nimport { Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubUpdate = ({\n  match,\n  history\n}) => {\n  _s();\n\n  /// spread state object and get the user out of that\n  // object destruction\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [categories, setCategories] = useState([]); //const [category, setCategory] = useState(\"\");\n  //const [sub, setSubs] = useState([]);\n\n  const [parent, setParent] = useState(''); //searching/filtering\n  //step 1\n\n  const [keyword, setKeyword] = useState(\"\"); //whenever user types something, it will be stored in state\n\n  useEffect(() => {\n    loadCategories().then().catch();\n    loadSub().then().catch();\n  }, []);\n\n  const loadCategories = () => getCategories().then(c => setCategories(c.data));\n\n  const loadSub = () => getSub(match.params.slug).then(sub => {\n    setName(sub.data.name);\n    setParent(sub.data.parent);\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault(); //console.log(name);\n\n    setLoading(true);\n    updateSub({\n      name,\n      parent\n    }, user.token).then(res => {\n      // console.log(res)\n      setLoading(false);\n      setName('');\n      toast.success(`${res.data.name} is created`); //loadCategories().then().catch();\n      //loadSubs().then().catch();\n\n      history.pushState('/admin/sub');\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      if (err.response.status === 400) toast.error(err.response.data);\n    });\n  };\n\n  const handleRemove = async slug => {\n    /*let ans = window.confirm(\"Delete?\");\r\n    console.log(ans, slug);*/\n    if (window.confirm(\"Delete?\")) {\n      setLoading(true);\n      removeSub(slug, user.token).then(res => {\n        setLoading(false);\n        toast.error(`${res.data.name} deleted`); //loadCategories().then().catch();\n\n        loadSubs().then().catch();\n      }).catch(err => {\n        if (err.response.status === 400) {\n          setLoading(false);\n          toast.error(err.response.data);\n        }\n      });\n    }\n  };\n  /*const categoryForm = () =>\r\n      <form onSubmit ={handleSubmit}>\r\n          <div className=\"form-group\">\r\n              <label >Name</label>\r\n              <input type=\"text\" className=\"form-control\"\r\n                     onChange={e => setName(e.target.value)}\r\n                     value = {name}\r\n                     autoFocus\r\n                     required\r\n              />\r\n              <br/>\r\n              <button className=\"btn btn-outline-primary\">Save</button>\r\n          </div>\r\n      </form>*/\n\n  /*// step 3\r\n  const handleSearchChange = (e) => {\r\n      e.preventDefault()\r\n      setKeyword(e.target.value.toLowerCase());\r\n  }*/\n  // step 4\n\n\n  const searched = keyword => category => category.name.toLowerCase().includes(keyword);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-danger\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Update Sub Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Parent Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            className: \"form-control\",\n            onChange: e => setCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Please Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), categories.length > 0 && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category._id,\n              children: category.name\n            }, category._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 59\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CategoryForm, {\n          handleSubmit: handleSubmit,\n          name: name,\n          setName: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocalSearch, {\n          keyword: keyword,\n          setKeyword: setKeyword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), subs.filter(searched(keyword)).map(sub => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: [sub.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => handleRemove(sub.slug),\n            className: \"btn btn-sm float-right\",\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n              className: \"test-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/sub/${sub.slug}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn btn-sm float-right\",\n              children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                className: \"text-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)]\n        }, sub._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubUpdate, \"Zj15Rwa+RH/R3weJVIaRYxCxJNU=\", false, function () {\n  return [useSelector];\n});\n\n_c = SubUpdate;\nexport default SubUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubUpdate\");","map":{"version":3,"sources":["C:/Users/vn100/Desktop/Ecommerce/client/src/pages/admin/sub/SubUpdate.js"],"names":["React","useState","useEffect","AdminNav","toast","useSelector","getCategories","createSub","getSub","removeSub","Link","EditOutlined","DeleteOutlined","CategoryForm","LocalSearch","SubUpdate","match","history","user","state","name","setName","loading","setLoading","categories","setCategories","parent","setParent","keyword","setKeyword","loadCategories","then","catch","loadSub","c","data","params","slug","sub","handleSubmit","e","preventDefault","updateSub","token","res","success","pushState","err","console","log","response","status","error","handleRemove","window","confirm","loadSubs","searched","category","toLowerCase","includes","setCategory","target","value","length","map","_id","subs","filter"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport AdminNav from '../../../components/navigation/AdminNav'\r\n//import UserNav from \"../../components/navigation/UserNav\";\r\nimport {toast} from 'react-toastify'\r\nimport {useSelector} from \"react-redux\";\r\nimport { getCategories } from \"../../../functions/category\";\r\nimport {createSub, getSub, removeSub} from \"../../../functions/sub\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {EditOutlined, DeleteOutlined} from '@ant-design/icons'\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\r\n\r\nconst SubUpdate = ({match, history}) => {\r\n    /// spread state object and get the user out of that\r\n    // object destruction\r\n    const {user} = useSelector(state => ({...state}));\r\n    const [name, setName] = useState('')\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    //const [category, setCategory] = useState(\"\");\r\n    //const [sub, setSubs] = useState([]);\r\n    const [parent, setParent] = useState('');\r\n    //searching/filtering\r\n    //step 1\r\n    const[keyword, setKeyword] = useState(\"\"); //whenever user types something, it will be stored in state\r\n\r\n\r\n    useEffect(() => {\r\n        loadCategories().then().catch();\r\n        loadSub().then().catch();\r\n    }, []);\r\n\r\n    const loadCategories = () => getCategories().then(c =>\r\n        setCategories(c.data)\r\n    );\r\n\r\n    const loadSub = () => getSub(match.params.slug).then(sub => {\r\n        setName(sub.data.name)\r\n        setParent(sub.data.parent);\r\n        }\r\n    );\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(name);\r\n        setLoading(true)\r\n        updateSub({name, parent}, user.token)\r\n            .then(res => {\r\n                // console.log(res)\r\n                setLoading(false)\r\n                setName('')\r\n                toast.success(`${res.data.name} is created`);\r\n                //loadCategories().then().catch();\r\n                //loadSubs().then().catch();\r\n                history.pushState('/admin/sub');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                if(err.response.status === 400) toast.error(err.response.data);\r\n            })\r\n    };\r\n\r\n    const handleRemove = async(slug) => {\r\n        /*let ans = window.confirm(\"Delete?\");\r\n        console.log(ans, slug);*/\r\n        if(window.confirm(\"Delete?\")){\r\n            setLoading(true)\r\n            removeSub(slug, user.token)\r\n                .then(res => {\r\n                    setLoading(false);\r\n                    toast.error(`${res.data.name} deleted`);\r\n                    //loadCategories().then().catch();\r\n                    loadSubs().then().catch();\r\n                })\r\n                .catch(err => {\r\n                    if(err.response.status === 400){\r\n                        setLoading(false);\r\n                        toast.error(err.response.data);\r\n\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    /*const categoryForm = () =>\r\n        <form onSubmit ={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label >Name</label>\r\n                <input type=\"text\" className=\"form-control\"\r\n                       onChange={e => setName(e.target.value)}\r\n                       value = {name}\r\n                       autoFocus\r\n                       required\r\n                />\r\n                <br/>\r\n                <button className=\"btn btn-outline-primary\">Save</button>\r\n            </div>\r\n        </form>*/\r\n\r\n    /*// step 3\r\n    const handleSearchChange = (e) => {\r\n        e.preventDefault()\r\n        setKeyword(e.target.value.toLowerCase());\r\n    }*/\r\n\r\n    // step 4\r\n    const searched = (keyword) => (category) => category.name.toLowerCase().includes(keyword)\r\n\r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    { loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                        <h4>Update Sub Category</h4>\r\n                    )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Parent Category</label>\r\n                        <select name=\"category\" className=\"form-control\" onChange={e => setCategory(e.target.value)}>\r\n                            <option>Please Select</option>\r\n                            {categories.length > 0 &&\r\n                            categories.map((category) => (<option key={category._id} value={category._id}>\r\n                                {category.name}\r\n                            </option>))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/*{JSON.stringify(category)}*/}\r\n\r\n\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n\r\n                    {/* Step 2\r\n                    <input\r\n                        type=\"search\"\r\n                        placeholder=\"Filter\"\r\n                        value={keyword}\r\n                        onChange={handleSearchChange}\r\n                        className=\"form-control mb-4\"\r\n                    /> user can type keywords here*/}\r\n\r\n                    {/* step 2 and step 3 after combination by LocalSearch.js*/}\r\n                    <LocalSearch\r\n                        keyword={keyword}\r\n                        setKeyword={setKeyword}\r\n                    />\r\n\r\n\r\n                    {/* step 5 */}\r\n                    {subs.filter(searched(keyword)).map((sub) => (\r\n                        <div className=\"alert alert-warning\" key = {sub._id}>\r\n                            {sub.name}\r\n                            <span onClick={() => handleRemove(sub.slug)} className=\"btn btn-sm float-right\">\r\n                            <DeleteOutlined className=\"test-danger\"/>\r\n                        </span>\r\n                            <Link to={`/admin/sub/${sub.slug}`}>\r\n\r\n                                <span className=\"btn btn-sm float-right\">\r\n                                    <EditOutlined className=\"text-warning\"/>\r\n                                </span>\r\n                            </Link>\r\n                        </div>))}\r\n                    {/*JSON.stringify(categories*/}\r\n                    {/*{categories.length}*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubUpdate;"]},"metadata":{},"sourceType":"module"}