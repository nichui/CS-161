{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vn100\\\\Desktop\\\\Ecommerce\\\\client\\\\src\\\\components\\\\routes\\\\UserRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingToRedirect from './LoadingToRedirect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  return user && user.token ? /*#__PURE__*/_jsxDEV(Route, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingToRedirect, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 33\n  }, this);\n};\n\n_s(UserRoute, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserRoute;\nexport default UserRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoute\");","map":{"version":3,"sources":["C:/Users/vn100/Desktop/Ecommerce/client/src/components/routes/UserRoutes.js"],"names":["React","Route","useSelector","LoadingToRedirect","UserRoute","children","rest","user","state","token"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAD,KAAyB;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAWL,WAAW,CAAEM,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;AAEA,SAAQD,IAAI,IAAIA,IAAI,CAACE,KAAd,gBACF,QAAC,KAAD,OAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,UADE,gBACqB,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAD5B;AAEH,CALD;;GAAMF,S;UACeF,W;;;KADfE,S;AAON,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport LoadingToRedirect from './LoadingToRedirect';\r\n\r\nconst UserRoute = ({children, ...rest}) => {\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    return (user && user.token) ?\r\n        (<Route {...rest}/>) : (<LoadingToRedirect />);\r\n};\r\n\r\nexport default UserRoute;"]},"metadata":{},"sourceType":"module"}