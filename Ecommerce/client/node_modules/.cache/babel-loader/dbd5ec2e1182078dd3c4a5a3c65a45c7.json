{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vn100\\\\Desktop\\\\Ecommerce\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\n/*import './App.css';*/\n\nimport React, { useEffect } from \"react\";\nimport { Switch, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ForgotPassword from \"./pages/authentication/ForgotPassword\";\nimport Login from './pages/authentication/Login';\nimport Register from './pages/authentication/Register';\nimport Home from './pages/Home';\nimport Header from './components/navigation/Header';\nimport RegisterComplete from './pages/authentication/RegisterComplete';\nimport History from './pages/user/History';\nimport UserRoute from './components/routes/UserRoutes';\nimport Password from './pages/user/Password';\nimport Wishlist from './pages/user/Wishlist';\nimport { auth } from './firebase';\nimport { useDispatch } from 'react-redux';\nimport { createOrUpdateUser, currentUser } from \"./functions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  /*\n  /!*import mongoose*!/\n  const mongoose = require(\"mongoose\");\n  /!*import dotenv*!/\n  const dotenv = require(\"dotenv\");\n  dotenv.config();\n   /!*database connection*!/\n  mongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true})\n      .then(() => console.log(\"DB Connected\"));\n   mongoose.connection.on(\"error\", err => {\n      console.log(`DB connection error: ${err.message}`);\n  });*/\n  // to check firebase auth state\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async user => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult();\n        console.log(\"user\", user);\n        currentUser(idTokenResult.token).then(res => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id\n            }\n          });\n        }).catch(err => console.log(err));\n      }\n    }); // cleanup\n\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register\",\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register/complete\",\n        component: RegisterComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/forgot/password\",\n        component: ForgotPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserRoute, {\n        exact: true,\n        path: \"/user/history\",\n        component: History\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserRoute, {\n        exact: true,\n        path: \"/user/password\",\n        component: Password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserRoute, {\n        exact: true,\n        path: \"/user/wishlist\",\n        component: Wishlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vn100/Desktop/Ecommerce/client/src/App.js"],"names":["React","useEffect","Switch","Route","ToastContainer","ForgotPassword","Login","Register","Home","Header","RegisterComplete","History","UserRoute","Password","Wishlist","auth","useDispatch","createOrUpdateUser","currentUser","App","dispatch","unsubscribe","onAuthStateChanged","user","idTokenResult","getIdTokenResult","console","log","token","then","res","type","payload","name","data","email","role","_id","catch","err"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\n/*import './App.css';*/\nimport React, {useEffect} from \"react\";\nimport {Switch, Route} from 'react-router-dom';\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\nimport ForgotPassword from \"./pages/authentication/ForgotPassword\";\n\n\n\nimport Login from './pages/authentication/Login';\nimport Register from './pages/authentication/Register';\nimport Home from './pages/Home';\nimport Header from './components/navigation/Header';\nimport RegisterComplete from './pages/authentication/RegisterComplete';\nimport History from './pages/user/History';\nimport UserRoute from './components/routes/UserRoutes';\nimport Password from './pages/user/Password';\nimport Wishlist from './pages/user/Wishlist';\n\nimport {auth} from './firebase';\nimport {useDispatch} from 'react-redux';\nimport {createOrUpdateUser, currentUser} from \"./functions/auth\";\n\n\nconst App = () => {\n    const dispatch = useDispatch();\n    /*\n    /!*import mongoose*!/\n    const mongoose = require(\"mongoose\");\n    /!*import dotenv*!/\n    const dotenv = require(\"dotenv\");\n    dotenv.config();\n\n    /!*database connection*!/\n    mongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true})\n        .then(() => console.log(\"DB Connected\"));\n\n    mongoose.connection.on(\"error\", err => {\n        console.log(`DB connection error: ${err.message}`);\n    });*/\n\n    // to check firebase auth state\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(async (user) => {\n            if(user){\n                const idTokenResult = await user.getIdTokenResult()\n                console.log(\"user\", user);\n\n                currentUser(idTokenResult.token)\n                    .then(\n                    (res) => {\n                        dispatch({\n                            type: \"LOGGED_IN_USER\",\n                            payload: {\n                                name: res.data.name,\n                                email: res.data.email,\n                                token: idTokenResult.token,\n                                role: res.data.role,\n                                _id: res.data._id,\n                            },\n                        });\n                    }\n                ).catch(err => console.log(err));\n            }\n        });\n        // cleanup\n        return () => unsubscribe();\n    }, [])\n    return (\n        <>\n            <Header/>\n            <ToastContainer />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/register/complete\" component={RegisterComplete} />\n                <Route exact path=\"/forgot/password\" component={ForgotPassword} />\n                <UserRoute exact path=\"/user/history\" component={History} />\n                <UserRoute exact path=\"/user/password\" component={Password} />\n                <UserRoute exact path=\"/user/wishlist\" component={Wishlist} />\n            </Switch>\n        </>\n\n\n\n\n    );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}